<div id="gcode_scanner_tab">
    <h2>Gcode Scanner</h2>
    <p>Select a file and scan for unsafe G-code commands.</p>

    <!-- Wrapper for alignment -->
    <!-- File Selector and Scan Button still don't line up -Shafiq -->
    <div id="gcode_controls" style="display: flex; align-items: center; gap: 10px;">
        <label for="gcode_file_select">Select a file:</label>
        <select id="gcode_file_select" class="form-control" style="width: auto;">
            <option value="">-- Choose a file --</option>
        </select>
        <button id="scan_gcode_button" class="btn btn-primary">Scan G-code</button>
    </div>

    <!-- Scan Results (Hidden by Default) -->
    <div id="scan_results" style="display: none;">
        <h4>Scan Results</h4>
        <ul id="scan_results_list"></ul>
    </div>
</div>

{# CIS 4398: Gcode Scanner Tab Template Notes#}
{#
    The template is a simple HTML structure with a header, a paragraph, a file selector, a button, and a list to display the scan results.
    
    - `gcode_file_select`: A dropdown list that will contain the list of files available in the OctoPrint instance.
    - `scan_gcode_button`: A button that will trigger the scan process.
    - `scan_results`: A `<div>` that will contain the list of unsafe G-code commands found in the file.
    - `scan_results_list`: An unordered list to display unsafe commands.
    - `scan_results` is hidden by default and only displayed when the scan process completes.

    **Step 3: Create the JavaScript File**
    The JavaScript file will contain the logic to fetch the list of files available in the OctoPrint instance, scan the selected file, and display the scan results.
    Create a new JavaScript file named `gcode_scanner.js` in the `static/js` directory.
#}
